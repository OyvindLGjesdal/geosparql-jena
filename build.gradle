apply plugin: 'java-library'

sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.

repositories {
    //Custom Maven Repository
    //NB: MUST put this before Maven central otherwise will cause jai-core.jar not found error.
    maven {
        url "http://download.osgeo.org/webdav/geotools/"
    }

    //Maven central
    mavenCentral()
}

dependencies {

    //Apache Lucene
    //implementation 'org.apache.lucene:lucene-core:6.1.0'

    //Geotools: http://docs.geotools.org/latest/userguide.old/library/
    ext.geoToolsVersion = '19.0'
    api group: 'org.geotools', name: 'gt-api', version: geoToolsVersion
    api group: 'org.geotools', name: 'gt-epsg-hsql', version: geoToolsVersion
    api group: 'org.geotools', name: 'gt-jts-wrapper', version: geoToolsVersion
    api group: 'org.geotools', name: 'gt-main', version: geoToolsVersion

    api group: 'com.vividsolutions', name: 'jts', version: '1.13'

    compile group: 'org.jdom', name: 'jdom2', version: '2.0.6'

    //Apache Jena
    ext.jenaVersion = "3.6.0"
    api "org.apache.jena:apache-jena-libs:$jenaVersion"
    
    //Apache Commons Collections
    ext.commonsCollectionsVersion = "4.1"
    implementation "org.apache.commons:commons-collections4:$commonsCollectionsVersion"
    
    //Logging Framework
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    //JUnit Testing
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

group = 'org.ntu'
version = '0.9.6'

/*
//No longer applying the maven-publish and instead using includeBuild command in settings.gradle of dependent project.
//Remove if definitely not needed.
apply plugin: 'maven-publish'
publishing {
publications {
mavenJava(MavenPublication) {
from components.java
}
}
}

build.finalizedBy(publishToMavenLocal)
 */
//Change xlint:unchecked warnings to errors for more details.
//Typically caused by ArrayList rather than ArrayList<Type>.
//Can be suppressed by @SuppressWarning("unchecked") if use of generics is intended.
/*
tasks.withType(JavaCompile) {
options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}
 */

//Change xlint:deprecation warnings to errors for more details.
/*
tasks.withType(JavaCompile) {
options.compilerArgs << "-Xlint:deprecation" << "-Werror"
}
 */
