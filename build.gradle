apply plugin: 'java-library'

sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.

repositories {
    //Custom Maven Repository
    //NB: MUST put this before Maven central otherwise will cause jai-core.jar not found error.
    maven {
        url "http://download.osgeo.org/webdav/geotools/"
    }


    //Maven local
    mavenLocal()
    //Maven central
    mavenCentral()
}

dependencies {

    //Apache SIS Core
    ext.sisVersion = '0.8'
    api group: 'org.apache.sis.core', name: 'sis-referencing', version: sisVersion

    //Apache SIS EPSG database - allows full range of EPSG codes but download and licensing implications.
    //Use of EPSG data is incomptabile for bundling with Apache licence, see: http://sis.apache.org/epsg.html
    testImplementation group: 'org.apache.sis.non-free', name: 'sis-embedded-data', version: sisVersion

    //JTS Core
    api group: 'org.locationtech.jts', name: 'jts-core', version: '1.16.0-RC1'

    //JDON XML
    ext.jdomVersion = "2.0.6"
    implementation group: 'org.jdom', name: 'jdom2', version: jdomVersion

    //Apache Jena
    ext.jenaVersion = "3.8.0"
    //api "org.apache.jena:apache-jena-libs:$jenaVersion"
    //Issue resolving apache-jena-libs in Gradle projects. Use individual modules as provide jars.
    api "org.apache.jena:jena-core:$jenaVersion"
    api "org.apache.jena:jena-arq:$jenaVersion"
    api "org.apache.jena:jena-iri:$jenaVersion"
    api "org.apache.jena:jena-tdb:$jenaVersion"
    implementation (group: 'org.apache.jena', name: 'jena-cmds', version: jenaVersion){
        exclude group: "org.apache.jena", module: "apache-jena-libs"
        exclude group: "org.slf4j", module: "slf4j-log4j12"
    }

    //Apache Commons Collections
    ext.commonsCollectionsVersion = "4.1"
    implementation "org.apache.commons:commons-collections4:$commonsCollectionsVersion"

    //Logging Framework
    ext.slf4jVersion = "1.7.25"
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    implementation "org.slf4j:log4j-over-slf4j:$slf4jVersion"

    ext.logbackVersion = "1.2.3"
    testImplementation "ch.qos.logback:logback-classic:$logbackVersion"

    //JUnit Testing
    ext.junitVersion = "4.12"
    testImplementation "junit:junit:$junitVersion"

    //RDF Tables
    ext.rdfTablesVersion = "1.0.0"
    api "org.ntu:RDFTables:$rdfTablesVersion"

}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}

group = 'org.ntu'
version = '1.0.0'

apply plugin: 'maven-publish'
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

build.finalizedBy(publishToMavenLocal)
